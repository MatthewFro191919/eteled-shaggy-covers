# This is a basic workflow to help you get started with Actions

name: Build


# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main, experimental ]
  pull_request:
    branches: [ main, experimental ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildLinux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          - cd /home/appveyor
          - sudo add-apt-repository ppa:haxe/releases -y
          - sudo apt update           
          - sudo apt install neko tar gcc-7 g++-7 gcc-7-multilib g++-7-multilib -y
          - wget https://github.com/HaxeFoundation/haxe/releases/download/4.1.5/haxe-4.1.5-linux64.tar.gz
          - mkdir $HAXE_INSTALLDIR
          - tar -xf haxe-4.1.5-linux64.tar.gz -C $HAXE_INSTALLDIR
          - export PATH=$PATH:$HAXE_INSTALLDIR/haxe_20201231082044_5e33a78aa
          - mkdir $HAXELIB_ROOT && haxelib setup $HAXELIB_ROOT
          # Install project dependencies
          - haxelib install lime 7.9.0
          - RefreshEnv
          - haxelib install openfl
          - haxelib install flixel
          - haxelib run lime setup flixel
          - haxelib run lime setup
          - haxelib install flixel-tools
          # haxelib run flixel-tools setup -y # Can't do this since it asks [y/n] even with -y argument! Stupid
          - haxelib install flixel-addons
          - haxelib install flixel-ui
          - haxelib install hscript
          - haxelib install newgrounds
          - haxelib install flixel-addons
          - haxelib git faxe https://github.com/uhrobots/faxe
          - haxelib git polymod https://github.com/larsiusprime/polymod.git
          - haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          - haxelib git extension-webm https://github.com/KadeDev/extension-webm
          - haxelib run lime rebuild extension-webm windows
          - haxelib install linc_luajit
          - haxelib install actuate 
          #- haxelib git extension-webm https://github.com/KadeDev/extension-webm
          #- haxelib run lime rebuild extension-webm linux
          #why here's dublicate lmao
          - haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build Project.xml linux --app-version="4.0.0-${{ github.run_id}}" -D officialBuild
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: linuxBuild
          path: 'export/release/linux/bin'
  buildWindows:
    runs-on: windows-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          # http://help.appveyor.com/discussions/problems/5616-not-able-to-build-due-to-problem-in-chocolateyinstallps1
          - ps: Set-Service wuauserv -StartupType Manual
          # Install the neko chocolatey package (https://chocolatey.org/packages/neko)
          - cinst neko --version 2.3.0 -y
          # Install the haxe chocolatey package (https://chocolatey.org/packages/haxe)
          - cinst haxe --version 4.1.5 -y
          - RefreshEnv
          # Setup haxelib
          - mkdir "%HAXELIB_ROOT%"
          - haxelib setup "%HAXELIB_ROOT%"
          # Install project dependencies
          - haxelib install lime 7.9.0
          - RefreshEnv
          - haxelib install openfl
          - haxelib install flixel
          - haxelib run lime setup flixel
          - haxelib run lime setup
          - haxelib install flixel-tools
          # haxelib run flixel-tools setup -y # Can't do this since it asks [y/n] even with -y argument! Stupid
          - haxelib install flixel-addons
          - haxelib install flixel-ui
          - haxelib install hscript
          - haxelib install newgrounds
          - haxelib install flixel-addons
          - haxelib git faxe https://github.com/uhrobots/faxe
          - haxelib git polymod https://github.com/larsiusprime/polymod.git
          - haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          - haxelib git extension-webm https://github.com/KadeDev/extension-webm
          - haxelib run lime rebuild extension-webm windows
          - haxelib install linc_luajit
          - haxelib install actuate 
          #- haxelib git extension-webm https://github.com/KadeDev/extension-webm
          #- haxelib run lime rebuild extension-webm windows
          #why here's dublicate lmao
          - haxelib list
        shell: cmd
      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> %USERPROFILE%/settings.cocoa
        shell: cmd
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id}}"  -D officialBuild
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildMac:
    runs-on: macos-12

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.7

      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      # Runs a set of commands using the runners shell
      - name: Install Haxelib
        run: |
          - cd /Users/appveyor
          - brew install neko
          - brew install gnu-tar
          - brew install wget
          - wget "https://github.com/HaxeFoundation/haxe/releases/download/4.1.5/haxe-4.1.5-osx.tar.gz"
          - mkdir $HAXE_INSTALLDIR
          - tar -xf haxe-4.1.5-osx.tar.gz -C $HAXE_INSTALLDIR
          - export PATH=$PATH:$HAXE_INSTALLDIR/haxe_20201231082044_5e33a78aa
          - mkdir $HAXELIB_ROOT && haxelib setup $HAXELIB_ROOT
          # Install project dependencies
          - haxelib install lime 7.9.0
          - RefreshEnv
          - haxelib install openfl
          - haxelib install flixel
          - haxelib run lime setup flixel
          - haxelib run lime setup
          - haxelib install flixel-tools
          # haxelib run flixel-tools setup -y # Can't do this since it asks [y/n] even with -y argument! Stupid
          - haxelib install flixel-addons
          - haxelib install flixel-ui
          - haxelib install hscript
          - haxelib install newgrounds
          - haxelib install flixel-addons
          - haxelib git faxe https://github.com/uhrobots/faxe
          - haxelib git polymod https://github.com/larsiusprime/polymod.git
          - haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          - haxelib git extension-webm https://github.com/KadeDev/extension-webm
          - haxelib run lime rebuild extension-webm windows
          - haxelib install linc_luajit
          - haxelib install actuate 
          #- haxelib git extension-webm https://github.com/KadeDev/extension-webm
          #- haxelib run lime rebuild extension-webm macos
          #why here's dublicate lmao
          - haxelib list
      - name: Create Version Tag
        run: echo "${{github.run_id}}" > VERSION
      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"  -D officialBuild
      - name: Publish Artifact
        uses: actions/upload-artifact@v4.3.4
        with:
          name: macBuild
          path: export/release/macos/bin
